##############################		DOCKER COMPOSE		###########################

Nos permite levantar entornos multicontenedor para desarrollo, aunque también se pueden usar 
los ficheros yaml en algunos proveedores cloud. 

Esta es la web de docker compose donde tendremos como instalarlo y alguno 
ejemplos:  https://docs.docker.com/compose/

Lo primero será instalar docker compose, para ello seguimos los pasos en su web:

 	sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
	sudo chmod +x /usr/local/bin/docker-compose
	docker-compose --version

Para empezar crearemos un directorio dentro del cual crearemos nuestro fichero docker-compose.yaml
Vamos a seguir un ejemplo de docs.docker.com/compose/

	https://docs.docker.com/compose/gettingstarted/

1) Creamos el directorio:

	$ mkdir composetest
	$ cd composetest

2) creamos la app:

echo	-e "
import time

import redis
from flask import Flask

app = Flask(__name__)
cache = redis.Redis(host='redis', port=6379)

def get_hit_count():
    retries = 5
    while True:
        try:
            return cache.incr('hits')
        except redis.exceptions.ConnectionError as exc:
            if retries == 0:
                raise exc
            retries -= 1
            time.sleep(0.5)

@app.route('/')
def hello():
    count = get_hit_count()
    return 'Hello World! I have been seen {} times.\n'.format(count)" > app.py

3) Creamos otro fichero llamado requirements.txt

echo -e "
flask
redis" > requirements.txt



4) Creamos el Dockerfile

vi Dockerfile 

# syntax=docker/dockerfile:1
FROM python:3.7-alpine
WORKDIR /code
ENV FLASK_APP=app.py
ENV FLASK_RUN_HOST=0.0.0.0
RUN apk add --no-cache gcc musl-dev linux-headers
COPY requirements.txt requirements.txt
RUN pip install -r requirements.txt
EXPOSE 5000
COPY . .
CMD ["flask", "run"]



5) Creamos el docker-compose.yml

echo -e "
version: "3.9"
services:
  web:
    build: .
    ports:
      - "5000:5000"
  redis:
    image: "redis:alpine" "> docker-compose.yml

6) Build and run your app with Compose

	docker-compose up


7) Enter http://localhost:5000/ en el navegador para ver la app corriendo. 


Ahora podemos probar con diferentes opciones como montar un volumen, lanzar docker-compose up -d, etc, etc..

	docker-compose up -d
	docker-compose logs -f 
	docker-compose stop 
	docker-compose rm 

	*** Podemos usar nuestras imagenes de dockerhub en docker compose. 


 
